{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAdress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x09c85588765db1fdc9ada9f503d71fe8cb43040a632601887ff3982019c2a094",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "853158",
    "logsBloom": "0x
    "blockHash": "0x5a39d21ce7c6a51ee3fa8255458edd99c8d8664788176bc3eb8425dd7375907b",
    "transactionHash": "0x09c85588765db1fdc9ada9f503d71fe8cb43040a632601887ff3982019c2a094",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "853158",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "e940f34feea1ed2b378ac85f7a7aa651",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAdress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"ATM_Shifat\",\"details\":\"This implements price feeds as our library. The constructor has an address type parameter\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"Checks the amount sent to the contract. If enough money is sent , contract gets the fund else the transaction gets reverted. It uses pric feed to get the convertion rate from ETH to USD\"},\"withdraw()\":{\"details\":\"Only the owner can call this function If enough money is sent , contract gets the fund else the transaction gets reverted. It uses pric feed to get the convertion rate from ETH to USD\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds the contract\"},\"withdraw()\":{\"notice\":\"This function withdraws funds from the contract\"}},\"notice\":\"This is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//Get Funds from Users\\n//Withdraw funds\\n//set a minimum funding value in USD\\n\\n//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner(); // custom error\\n\\n/** @title A contract for crowd funding\\n * @author ATM_Shifat\\n * @notice This is to demo a sample funding contract\\n * @dev This implements price feeds as our library. The constructor has an address type parameter\\n */\\n\\ncontract FundMe {\\n    //Type declaration\\n    using PriceConverter for uint256;\\n\\n    //State variables\\n    uint256 public constant MINIMUM_USD = 5 * 1e18; // 1 * 10 ** 18\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmount;\\n\\n    //Modifiers\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe_NotOwner();\\n        }\\n        _;\\n    }\\n\\n    //Function Order\\n    //constractor\\n    //receive\\n    //fallback\\n    //external\\n    //public\\n    //internal\\n    //private\\n    //view/pure\\n\\n    constructor(address priceFeedAdress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAdress);\\n    }\\n\\n    //what happens if someone sends this contract without calling the fund function?\\n    //receive , fallback\\n    //Explanation on : https://solidity-by-example.org/fallback/\\n    // Ether is sent to the contract\\n    //         is msg.data empty?\\n    //             /   \\\\\\n    //           yes    no\\n    //           /         \\\\\\n    //       receive()?  fallback()\\n    //        /    \\\\\\n    //     yes      not\\n    //     /           \\\\\\n    // receive()    fallback()\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds the contract\\n     * @dev Checks the amount sent to the contract.\\n     * If enough money is sent , contract gets the fund else the transaction gets reverted.\\n     * It uses pric feed to get the convertion rate from ETH to USD\\n     */\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough ether\\\"\\n        );\\n\\n        s_funders.push(msg.sender);\\n        s_addressToAmount[msg.sender] = msg.value;\\n    }\\n\\n    /**\\n     * @notice This function withdraws funds from the contract\\n     * @dev Only the owner can call this function\\n     * If enough money is sent , contract gets the fund else the transaction gets reverted.\\n     * It uses pric feed to get the convertion rate from ETH to USD\\n     */\\n\\n    function withdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            s_addressToAmount[funders[funderIndex]] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmount(address funder) public view returns (uint256) {\\n        return s_addressToAmount[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xc5683bc04c811af7b4ba1d46d21b513af5b8b4d2b532e0b034d194ec55f690d7\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n/** @title A Library to aquire price feed from an Aggregator contract\\n * @author ATM_Shifat\\n * @notice Price feed library\\n * @dev PriceConverter is a library that is being used in the FundMe contract\\n */\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //ABI\\n        //Eth/USD price feed contract address\\n        //\\t0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        //price has 8 decimals\\n        //Ether has 18 decimals as 1 eth = 1e18 wei\\n        //10 additional 0 is to match the length\\n\\n        // return uint256(price);\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getDecimals(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        return priceFeed.decimals();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x70c1fe8e1f218ad3fd0d045b91ac04af5780008f2676c59235788afe540c0bee\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f72380380610f728339818101604052810190610032919061010f565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dc826100b1565b9050919050565b6100ec816100d1565b81146100f757600080fd5b50565b600081519050610109816100e3565b92915050565b600060208284031215610125576101246100ac565b5b6000610133848285016100fa565b91505092915050565b608051610e0d610165600039600081816103190152818161050a01526105e60152610e0d6000f3fe6080604052600436106100745760003560e01c8063893d20e81161004e578063893d20e81461010c5780639e87a5cd14610137578063b60d428814610162578063c0f8cffc1461016c57610083565b80633a7b6c741461008d5780633ccfd60b146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af919061082b565b6102cf565b6040516100c19190610899565b60405180910390f35b3480156100d657600080fd5b506100df610317565b005b3480156100ed57600080fd5b506100f66105d6565b60405161010391906108c3565b60405180910390f35b34801561011857600080fd5b506101216105e2565b60405161012e9190610899565b60405180910390f35b34801561014357600080fd5b5061014c61060a565b604051610159919061093d565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e9190610984565b610633565b6040516101a091906108c3565b60405180910390f35b674563918244f400006101e560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067c90919063ffffffff16565b1015610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d90610a0e565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600182815481106102e5576102e4610a2e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039c576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561042057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103d6575b5050505050905060005b81518110156104a55760006002600084848151811061044c5761044b610a2e565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061049d90610a8c565b91505061042a565b50600067ffffffffffffffff8111156104c1576104c0610ad4565b5b6040519080825280602002602001820160405280156104ef5781602001602082028036833780820191505090505b5060019080519060200190610505929190610749565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161054c90610b34565b60006040518083038185875af1925050503d8060008114610589576040519150601f19603f3d011682016040523d82523d6000602084013e61058e565b606091505b50509050806105d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c990610b95565b60405180910390fd5b5050565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080610688836106b8565b90506000670de0b6b3a764000085836106a19190610bb5565b6106ab9190610c26565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a9190610ce4565b5050509150506402540be400816107419190610d5f565b915050919050565b8280548282559060005260206000209081019282156107c2579160200282015b828111156107c15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610769565b5b5090506107cf91906107d3565b5090565b5b808211156107ec5760008160009055506001016107d4565b5090565b600080fd5b6000819050919050565b610808816107f5565b811461081357600080fd5b50565b600081359050610825816107ff565b92915050565b600060208284031215610841576108406107f0565b5b600061084f84828501610816565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088382610858565b9050919050565b61089381610878565b82525050565b60006020820190506108ae600083018461088a565b92915050565b6108bd816107f5565b82525050565b60006020820190506108d860008301846108b4565b92915050565b6000819050919050565b60006109036108fe6108f984610858565b6108de565b610858565b9050919050565b6000610915826108e8565b9050919050565b60006109278261090a565b9050919050565b6109378161091c565b82525050565b6000602082019050610952600083018461092e565b92915050565b61096181610878565b811461096c57600080fd5b50565b60008135905061097e81610958565b92915050565b60006020828403121561099a576109996107f0565b5b60006109a88482850161096f565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865720000000000000000600082015250565b60006109f86018836109b1565b9150610a03826109c2565b602082019050919050565b60006020820190508181036000830152610a27816109eb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a97826107f5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ac957610ac8610a5d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b1e600083610b03565b9150610b2982610b0e565b600082019050919050565b6000610b3f82610b11565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610b7f600b836109b1565b9150610b8a82610b49565b602082019050919050565b60006020820190508181036000830152610bae81610b72565b9050919050565b6000610bc0826107f5565b9150610bcb836107f5565b9250828202610bd9816107f5565b91508282048414831517610bf057610bef610a5d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c31826107f5565b9150610c3c836107f5565b925082610c4c57610c4b610bf7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c7681610c57565b8114610c8157600080fd5b50565b600081519050610c9381610c6d565b92915050565b6000819050919050565b610cac81610c99565b8114610cb757600080fd5b50565b600081519050610cc981610ca3565b92915050565b600081519050610cde816107ff565b92915050565b600080600080600060a08688031215610d0057610cff6107f0565b5b6000610d0e88828901610c84565b9550506020610d1f88828901610cba565b9450506040610d3088828901610ccf565b9350506060610d4188828901610ccf565b9250506080610d5288828901610c84565b9150509295509295909350565b6000610d6a82610c99565b9150610d7583610c99565b9250828202610d8381610c99565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dbb57610dba610a5d565b5b8282058414831517610dd057610dcf610a5d565b5b509291505056fea2646970667358221220936e646ec4f51c7b078815f8a291a3fd978776320d59614c201edff0d652cd7464736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063893d20e81161004e578063893d20e81461010c5780639e87a5cd14610137578063b60d428814610162578063c0f8cffc1461016c57610083565b80633a7b6c741461008d5780633ccfd60b146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af919061082b565b6102cf565b6040516100c19190610899565b60405180910390f35b3480156100d657600080fd5b506100df610317565b005b3480156100ed57600080fd5b506100f66105d6565b60405161010391906108c3565b60405180910390f35b34801561011857600080fd5b506101216105e2565b60405161012e9190610899565b60405180910390f35b34801561014357600080fd5b5061014c61060a565b604051610159919061093d565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e9190610984565b610633565b6040516101a091906108c3565b60405180910390f35b674563918244f400006101e560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067c90919063ffffffff16565b1015610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d90610a0e565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600182815481106102e5576102e4610a2e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039c576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561042057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103d6575b5050505050905060005b81518110156104a55760006002600084848151811061044c5761044b610a2e565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061049d90610a8c565b91505061042a565b50600067ffffffffffffffff8111156104c1576104c0610ad4565b5b6040519080825280602002602001820160405280156104ef5781602001602082028036833780820191505090505b5060019080519060200190610505929190610749565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161054c90610b34565b60006040518083038185875af1925050503d8060008114610589576040519150601f19603f3d011682016040523d82523d6000602084013e61058e565b606091505b50509050806105d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c990610b95565b60405180910390fd5b5050565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080610688836106b8565b90506000670de0b6b3a764000085836106a19190610bb5565b6106ab9190610c26565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a9190610ce4565b5050509150506402540be400816107419190610d5f565b915050919050565b8280548282559060005260206000209081019282156107c2579160200282015b828111156107c15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610769565b5b5090506107cf91906107d3565b5090565b5b808211156107ec5760008160009055506001016107d4565b5090565b600080fd5b6000819050919050565b610808816107f5565b811461081357600080fd5b50565b600081359050610825816107ff565b92915050565b600060208284031215610841576108406107f0565b5b600061084f84828501610816565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088382610858565b9050919050565b61089381610878565b82525050565b60006020820190506108ae600083018461088a565b92915050565b6108bd816107f5565b82525050565b60006020820190506108d860008301846108b4565b92915050565b6000819050919050565b60006109036108fe6108f984610858565b6108de565b610858565b9050919050565b6000610915826108e8565b9050919050565b60006109278261090a565b9050919050565b6109378161091c565b82525050565b6000602082019050610952600083018461092e565b92915050565b61096181610878565b811461096c57600080fd5b50565b60008135905061097e81610958565b92915050565b60006020828403121561099a576109996107f0565b5b60006109a88482850161096f565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865720000000000000000600082015250565b60006109f86018836109b1565b9150610a03826109c2565b602082019050919050565b60006020820190508181036000830152610a27816109eb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a97826107f5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ac957610ac8610a5d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b1e600083610b03565b9150610b2982610b0e565b600082019050919050565b6000610b3f82610b11565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610b7f600b836109b1565b9150610b8a82610b49565b602082019050919050565b60006020820190508181036000830152610bae81610b72565b9050919050565b6000610bc0826107f5565b9150610bcb836107f5565b9250828202610bd9816107f5565b91508282048414831517610bf057610bef610a5d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c31826107f5565b9150610c3c836107f5565b925082610c4c57610c4b610bf7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c7681610c57565b8114610c8157600080fd5b50565b600081519050610c9381610c6d565b92915050565b6000819050919050565b610cac81610c99565b8114610cb757600080fd5b50565b600081519050610cc981610ca3565b92915050565b600081519050610cde816107ff565b92915050565b600080600080600060a08688031215610d0057610cff6107f0565b5b6000610d0e88828901610c84565b9550506020610d1f88828901610cba565b9450506040610d3088828901610ccf565b9350506060610d4188828901610ccf565b9250506080610d5288828901610c84565b9150509295509295909350565b6000610d6a82610c99565b9150610d7583610c99565b9250828202610d8381610c99565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dbb57610dba610a5d565b5b8282058414831517610dd057610dcf610a5d565b5b509291505056fea2646970667358221220936e646ec4f51c7b078815f8a291a3fd978776320d59614c201edff0d652cd7464736f6c63430008110033",
  "devdoc": {
    "author": "ATM_Shifat",
    "details": "This implements price feeds as our library. The constructor has an address type parameter",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "Checks the amount sent to the contract. If enough money is sent , contract gets the fund else the transaction gets reverted. It uses pric feed to get the convertion rate from ETH to USD"
      },
      "withdraw()": {
        "details": "Only the owner can call this function If enough money is sent , contract gets the fund else the transaction gets reverted. It uses pric feed to get the convertion rate from ETH to USD"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds the contract"
      },
      "withdraw()": {
        "notice": "This function withdraws funds from the contract"
      }
    },
    "notice": "This is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmount",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}